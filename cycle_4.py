def even_numbers(n): # это функция-генератор, которая создаёт последовательность чётных чисел от 0 до n включительно.
    for i in range(n + 1): # цикл перебирает числа от 0 до n.
        if i % 2 == 0: # проверка: является ли число чётным (остаток от деления на 2 равен нулю).
            yield i # вместо обычного return используется yield, который возвращает чётные числа одно за другим

try:
    n = 100
    result = sum(even_numbers(n)) #  запускается генератор even_numbers(n), все чётные числа суммируются функцией sum().
    print(f"Сумма четных чисел от 0 до {n}: {result}")
except ValueError as e: # Если ошибка типа ValueError (например, если бы n был бы некорректным значением), программа не упадёт, а выведет сообщение об ошибке.
    print(f"Ошибка: {e}")


def squares(x): # Функция squares принимает параметр x
    for i in range(x + 1): # цикл for i in range(x + 1), который проходит по всем целым числам от 0 до x (включительно, поскольку range(x + 1) включает x).
        if i % 2 != 0: # Это условие проверяет, является ли число нечетным. Если это так, то число i возвращается с помощью оператора yield.
            yield i
try:
    x = 10
    result = [i ** 2 for i in squares(x)] # Создается список result, который строится с помощью генератора списка. В нем для каждого числа, которое генерирует функция squares(x), вычисляется его квадрант
    print(result)
except ValueError:
    print(f"Ошибка")


count = 0 # Создаем счетчик


while True:
    number = int(input("Введите число: "))
    if number > 0:
        count += 1 # Если число положительное, то увеличиваем счетчик на 1
    elif number < 0:
        print("Счетчик =", count)  # Выводим количество введенных положительных чисел
        break  # Прерываем цикл, когда введено отрицательное число
